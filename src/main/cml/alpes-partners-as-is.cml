Domain GestonIntegralDePartnerships {
  domainVisionStatement = "Gestion integral de partnerships para marcas"

  Subdomain Afiliados {
    type = CORE_DOMAIN
    domainVisionStatement = "Gestión de programas de afiliados y automatización de la creación de los mismos para las marcas"
  }

  Subdomain Influencers {
    type = CORE_DOMAIN
    domainVisionStatement = "Conectar marcas con influencers verificados"
  }

  Subdomain Lealtad {
    type = CORE_DOMAIN
    domainVisionStatement = "Activar redes de empleados y clientes leales como embajadores de marca"
  }

  Subdomain Aliados {
    type = CORE_DOMAIN
    domainVisionStatement = "Gestionar el ciclo de vida de las relaciones comerciales"
  }

  Subdomain Reportes {
    type = GENERIC_SUBDOMAIN
    domainVisionStatement = "Presentar informes y repottes avanzados a los afiliados más efectivos"
  }

  Subdomain Pagos {
    type = GENERIC_SUBDOMAIN
    domainVisionStatement = "Procesar pagos a afiliados y influencers de manera segura y eficiente"
  }
}

BoundedContext ContextoMarca implements Afiliados, Influencers, Lealtad , Reportes{
  domainVisionStatement = "Todos los servicios giran en torno a las marcas"
}

BoundedContext ContextoAliados implements Aliados, Pagos {
  domainVisionStatement = "Gestión de relaciones comerciales y ciclo de vida de los aliados"
}

BoundedContext ContextoReportes implements Reportes {
  domainVisionStatement = "Presentación de informes y reportes avanzados a los afiliados más efectivos"
}

BoundedContext ContextoPagos implements Pagos {
  domainVisionStatement = "Procesamiento de pagos a afiliados y influencers de manera segura y eficiente"
}

ContextMap {
  type = SYSTEM_LANDSCAPE
  state = AS_IS

  contains ContextoMarca
  contains ContextoAliados
  contains ContextoReportes
  contains ContextoPagos

  ContextoMarca [SK]<->[SK] ContextoAliados
  ContextoMarca <- ContextoReportes
  ContextoAliados <- ContextoPagos
}
